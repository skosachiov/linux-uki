#!/usr/bin/make -f

KERNEL_VERSION := $(shell basename /boot/vmlinuz-* | sed 's/vmlinuz-//')

%:
	dh $@

override_dh_auto_build:
	@echo "Configuring for kernel build..."
	# Clean up any existing backup files
	rm -f debian/changelog.dch
	# Update changelog version before build
	@CURRENT=$$(dpkg-parsechangelog -S Version 2>/dev/null | cut -d- -f1); \
	if [ "$$CURRENT" != "$(KERNEL_VERSION)" ]; then \
		echo "Updating package version to $(KERNEL_VERSION)-1"; \
		dch --no-auto-nmu --force-bad-version -v "$(KERNEL_VERSION)-1" "Build for kernel $(KERNEL_VERSION)" --distribution unstable; \
	fi
	# Replace template variables
	sed 's/@KERNEL_VERSION@/$(KERNEL_VERSION)/g' debian/signing-template.json.in > $(DESTDIR)/usr/lib/linux-uki/files.json
	$(MAKE) build KERNEL_VERSION=$(KERNEL_VERSION)

override_dh_auto_install:
	$(MAKE) install DESTDIR=debian/linux-uki KERNEL_VERSION=$(KERNEL_VERSION)

override_dh_auto_clean:
	$(MAKE) clean
	rm -f debian/changelog.dch
	rm -f debian/.debhelper/
	rm -f debian/debhelper-build-stamp
	rm -f debian/files
	rm -f debian/linux-uki-helpers-amd64-signed-template.substvars
	rm -f debian/linux-uki-helpers-amd64-signed-template/
	rm -f debian/linux-uki-unsigned.substvars
	rm -f debian/linux-uki-unsigned/
	rm -f debian/signing-template.json

